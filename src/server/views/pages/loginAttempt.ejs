<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="">
  <meta name="author" content="">
  <title>Login</title>


  <!-- Currently CSS is in react bundle -->
  <!-- <link href="/stylesheets/bootstrap4-compiled.css" rel="stylesheet" type="text/css"> -->
  <link rel='stylesheet' href='/stylesheets/forDev_bulma.css' />
  <link rel='stylesheet' href='/stylesheets/forDev_myStyles.css' />

</head>

<body>

    <!-- Navigation bar -->
  
  <nav class="navbar customNavbarSpacing" role="navigation" aria-label="main navigation">
    <div class="navbar-brand">
      <a class="navbar-item">Home
      </a>
  
      <a role="button" class="navbar-burger burger" aria-label="menu" aria-expanded="false" data-target="navbarBasicExample">
        <span aria-hidden="true"></span>
        <span aria-hidden="true"></span>
        <span aria-hidden="true"></span>
      </a>
    </div>
  
    <div id="navbarBasicExample" class="navbar-menu">
      <div class="navbar-end">
        <div class="navbar-item">
          <div class="buttons">
            <a class="button is-primary">
              <strong>Sign up</strong>
            </a>
            <a class="button is-light">
              Log in
            </a>
          </div>
        </div>
      </div>
    </div>
  </nav>

  <div class="container is-fluid topSpacing">
   
    <div class="box customBoxSpacing">

      <!-- NOTE:
      !
      !   This needs a 2nd password input for validation
      !
      !
      ! -->
    <!-- Content -->
    <!-- These flash messages need to be made to work, and tweak the css classes to point to bulma or custom classes -->
    <!--  Test these out by themselves, without the css and html -->
    <!-- <% if (messages.success) { %>
    <div class="alert alert-info" role="alert">
      <%= messages.success %>
    </div>
    <% } %>
            <!-- this merely checks keys of the object to see if the 'errors' key/value pair contains anything -->
    <% if (Object.keys(errors).length === 0) { %>
    <!-- Try this: <% if (Object.keys(errors).length !== 0) { %> -->
    <% } else { %>
      <h2 class="text-danger">Oops, please correct the following:</h2>
      <ul class="errors-list">
        <% Object.values(errors).forEach(error => { %>
        <li class="text-danger">
          <%= error.msg %>
        </li>
        <% }) %>
      </ul>
    <% } %> -->

      <div class="container CustomFormSpacing">
        <h1 class="loginHeader">Log in below</h1>
        <br>
        <div class="field"> <!-- CSS FIX NEEDED -- add bulma or custom class -- similar to: <%= errors.email ? 'is-invalid' : '' %> -->
          <p class="control">
          <!-- <p class="control has-icons-left has-icons-right"> -->
            <input class="input" type="email" placeholder="Email">
            
            <!-- <span class="icon is-small is-left">
              <i class="fas fa-envelope"></i>
            </span>
            <span class="icon is-small is-right">
              <i class="fas fa-check"></i>
            </span> -->
          </p>
          <!-- <%= errors.email ? '<p class="help is-danger">This email is invalid *TESTING******** </p>' : '' %> -->
        </div>
        <div class="field <%= errors.password ? 'is-invalid' : '' %>"> <!-- CSS FIX NEEDED -- add bulma or custom class -->
          <!-- <p class="control has-icons-left"> -->
          <p class="control">
            <input class="input" type="password" placeholder="Password">
            <!-- <span class="icon is-small is-left">
              <i class="fas fa-lock"></i>
            </span> -->
          </p>
        </div>
        <div class="field">
          <p class="control">
            <button class="button is-success">
              Login
            </button>
          </p>
        </div>
      </div>

    </div>
  </div>
  
  <script>
    document.addEventListener('DOMContentLoaded', () => {

      // Get all "navbar-burger" elements
      const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);

      // Check if there are any navbar burgers
      if ($navbarBurgers.length > 0) {

        // Add a click event on each of them
        $navbarBurgers.forEach(el => {
          el.addEventListener('click', () => {

            // Get the target from the "data-target" attribute
            const target = el.dataset.target;
            const $target = document.getElementById(target);

            // Toggle the "is-active" class on both the "navbar-burger" and the "navbar-menu"
            el.classList.toggle('is-active');
            $target.classList.toggle('is-active');

          });
        });
      }

    });
  </script>
</body>
</html>

